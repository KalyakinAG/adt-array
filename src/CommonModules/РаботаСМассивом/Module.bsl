// find - поиск элемента коллекции
// 
// Параметры:
//  Элементы - Массив - Элементы
//  Предикат - Строка - Функция, при вычислении которой для искомого элемента возвращается Истина.
//  Контекст - Любой - Контекст, который может быть использован для вызова функции
//  Данные - Любой - Данные, которые могут быть использованы при вычислении функции
// 
// Возвращаемое значение:
//  Произвольный, Неопределено -- Найденный элемент
// Найденный элемент
Функция НайтиЭлемент(Элементы, Предикат, Контекст = Неопределено, Данные = Неопределено) Экспорт
	Для Каждого Элемент Из Элементы Цикл
		Если Вычислить(Предикат) Тогда
			Возврат Элемент;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

// filter
// 
// Параметры:
//  Элементы Элементы
//  Предикат Предикат
//  Контекст - Неопределено - Контекст
//  Данные - Неопределено - Данные
// 
// Возвращаемое значение:
//  Массив - Отобрать
Функция Отобрать(Элементы, Предикат, Контекст = Неопределено, Данные = Неопределено) Экспорт
	НайденныеЭлементы = Новый Массив;
	Для Каждого Элемент Из Элементы Цикл
		Если Вычислить(Предикат) Тогда
			НайденныеЭлементы.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	Возврат НайденныеЭлементы;
КонецФункции

// map
// 
// Параметры:
//  Элементы Элементы
//  Выражение Выражение
//  Контекст - Неопределено - Контекст
//  Данные - Неопределено - Данные
// 
// Возвращаемое значение:
//  Массив - Отобразить
Функция Отобразить(Элементы, Выражение, Контекст = Неопределено, Данные = Неопределено) Экспорт
	НовыеЭлементы = Новый Массив;
	Для Каждого Элемент Из Элементы Цикл
		НовыеЭлементы.Добавить(Вычислить(Выражение));
	КонецЦикла;
	Возврат НовыеЭлементы;
КонецФункции

// reduce
// 
// Параметры:
//  Элементы Элементы
//  Выражение Выражение
//  НачальноеЗначение - Неопределено - Начальное значение
//  Контекст - Неопределено - Контекст
//  Данные - Неопределено - Данные
// 
// Возвращаемое значение:
//  Произвольный - Преобразовать
Функция Преобразовать(Элементы, Выражение, НачальноеЗначение = Неопределено, Контекст = Неопределено, Данные = Неопределено) Экспорт
	Накопитель = НачальноеЗначение;
	Для Каждого Элемент Из Элементы Цикл
		Накопитель = Вычислить(Выражение);
	КонецЦикла;
	Возврат Накопитель;
КонецФункции

//  pop
Функция Взять(Элементы) Экспорт
	ВГраница = Элементы.ВГраница();
	Если ВГраница = -1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	Результат = Элементы[ВГраница];
	Элементы.Удалить(ВГраница);
	Возврат Результат;
КонецФункции

//  push
Функция Положить(Элементы, Элемент) Экспорт
	Элементы.Добавить(Элемент);
КонецФункции

//  forEach
Функция ДляКаждого(Элементы, Алгоритм, Контекст = Неопределено, Данные = Неопределено) Экспорт
	Для Каждого Элемент Из Элементы Цикл
		Выполнить(Алгоритм);
	КонецЦикла;
КонецФункции

// Быстрая сортировка
// http://ru.wikibooks.org/wiki/%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B_%D1%80%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8_%D0%B1%D1%8B%D1%81%D1%82%D1%80%D0%BE%D0%B9_%D1%81%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B8
// Реализация взята из публикации https://infostart.ru/1c/articles/204320/ 
// 
// Параметры:
//  Элементы Элементы
//  Предикат - Строка, Неопределено - Предикат
//  Контекст - Неопределено - Контекст
//  НижнийПредел - Число - Нижний предел
//  ВерхнийПредел - Число - Верхний предел
Процедура БыстраяСортировка(Элементы, Предикат, Контекст, НижнийПредел, ВерхнийПредел)
    Начало = НижнийПредел;
    Конец = ВерхнийПредел;
    Б = Элементы[Цел((Начало + Конец)/2)];
	Пока Истина Цикл
		А = Элементы[Начало];
        Пока Вычислить(Предикат) < 0 Цикл // Элементы[Начало] < Б
            Начало = Начало + 1;                   
			А = Элементы[Начало];
		КонецЦикла;
		А = Элементы[Конец];
        Пока Вычислить(Предикат) > 0 Цикл // Элементы[Конец] > Б
            Конец = Конец - 1;                   
			А = Элементы[Конец];
        КонецЦикла; 
        Если Начало <= Конец Тогда               
            Значение = Элементы[Начало];
            Элементы[Начало] = Элементы[Конец];
            Элементы[Конец] = Значение;
            Начало = Начало + 1;
            Конец = Конец - 1;            
        КонецЕсли;
        Если Начало > Конец Тогда                       
            Прервать;                        
        КонецЕсли;
	КонецЦикла;
    Если НижнийПредел < Конец Тогда         
        БыстраяСортировка(Элементы, Предикат, Контекст, НижнийПредел, Конец);        
	КонецЕсли; 
    Если Начало < ВерхнийПредел Тогда                      
        БыстраяСортировка(Элементы, Предикат, Контекст, Начало, ВерхнийПредел);        
    КонецЕсли;
КонецПроцедуры

// Сравнить.
// 
// Параметры:
//  А - Любой - сравнимаемое значение 1  
//  Б - Любой - сравнимаемое значение 2
// 
// Возвращаемое значение:
//  Число - меньше 0, сортировка поставит 1-ое значение по меньшему индексу, чем 2-ое, 
//			равно 0, сортировка не меняет индексы значений,
//			больше 0, сортировка поставит 2-ое значение по меньшему индексу, чем 1-ое 
Функция Сравнить(А, Б) Экспорт
	Если А = Б Тогда
		Возврат 0;
	КонецЕсли;
	Если А < Б Тогда
		Возврат -1;
	КонецЕсли;
	Возврат 1;
КонецФункции

//  sort
Процедура Сортировать(Элементы, НовыйПредикат = Неопределено, Контекст = Неопределено) Экспорт
	Предикат = ?(ЗначениеЗаполнено(НовыйПредикат), НовыйПредикат, "Сравнить(А, Б)");
	БыстраяСортировка(Элементы, Предикат, Контекст, 0, Элементы.ВГраница());
КонецПроцедуры
