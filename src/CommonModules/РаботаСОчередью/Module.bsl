//  Подсистема "Абстрактный тип данных массив"
//	Автор: Калякин Андрей Г.
//  https://github.com/KalyakinAG/adt-array
//  https://infostart.ru/1c/articles/1473034/

#Область ПрограммныйИнтерфейс

// Параметры:
//  Ключ - Строка - имя свойства объекта. Определяется для очереди с уникальными элементами
//  ФункцияСравнения - Строка - . Определяется для очереди с приоритетом
Функция Очередь(ЕстьУникальность = Ложь, ЕстьПриоритет = Ложь, Ключ = Неопределено, ФункцияСравнения = Неопределено) Экспорт
	Возврат НоваяОчередь(ЕстьПриоритет, ЕстьУникальность, ФункцияСравнения, Ключ);
КонецФункции

Функция ОчередьУникальныхЗначений(Ключ = Неопределено) Экспорт
	Возврат НоваяОчередь(Ложь, Истина, , Ключ);
КонецФункции

// Параметры:
//  Ключ - Строка - имя свойства объекта. Определяется для очереди с уникальными элементами
//  ФункцияСравнения - Строка - . Определяется для очереди с приоритетом
Функция ПриоритетнаяОчередь(ФункцияСравнения) Экспорт
	Возврат НоваяОчередь(Истина, Ложь, ФункцияСравнения);
КонецФункции

Функция ПриоритетнаяОчередьУникальныхЗначений(ФункцияСравнения, Ключ = Неопределено) Экспорт
	Возврат НоваяОчередь(Истина, Истина, ФункцияСравнения, Ключ);
КонецФункции

Процедура Положить(Очередь, Элемент) Экспорт
	Если Очередь.ЕстьУникальность Тогда
		Если РаботаСМножеством.Содержит(Очередь.Словарь, Элемент) Тогда
			Возврат;
		КонецЕсли;
		РаботаСМножеством.Добавить(Очередь.Словарь, Элемент);
	КонецЕсли;
	Если Очередь.ЕстьПриоритет Тогда
		РаботаСМассивом.ПоложитьВОчередьСПриоритетом(Очередь.Элементы, Элемент, Очередь.ФункцияСравнения);
	Иначе
		РаботаСМассивом.Положить(Очередь.Элементы, Элемент);
	КонецЕсли;
КонецПроцедуры

//  isEmpty
Функция Пустая(Очередь) Экспорт
	Возврат НЕ ЗначениеЗаполнено(Очередь.Элементы);
КонецФункции

//  pop
Функция Взять(Очередь) Экспорт
	Элемент = РаботаСМассивом.Взять(Очередь.Элементы);
	Если Очередь.ЕстьУникальность Тогда
		РаботаСМножеством.Удалить(Очередь.Словарь, Элемент);
	КонецЕсли;
	Возврат Элемент;
КонецФункции

//  shift
Функция Сдвинуть(Очередь) Экспорт
	Элемент = РаботаСМассивом.Сдвинуть(Очередь.Элементы);
	Если Очередь.ЕстьУникальность Тогда
		РаботаСМножеством.Удалить(Очередь.Словарь, Элемент);
	КонецЕсли;
	Возврат Элемент;
КонецФункции

//  has
Функция Содержит(Очередь, Элемент) Экспорт
	Если Очередь.ЕстьУникальность Тогда
		Возврат РаботаСМножеством.Содержит(Очередь.Словарь, Элемент);
	КонецЕсли;
	Если Очередь.ЕстьПриоритет Тогда
		Возврат РаботаСМассивом.НайтиЭлементОчередиСПриоритетом(Очередь.Элементы, Элемент, 0, Очередь.Элементы.Количество(), Очередь.ФункцияСравнения);		
	КонецЕсли;
	Возврат РаботаСМассивом.НайтиЭлемент(Очередь.Элементы, "Элемент = Параметры", , Элемент) <> Неопределено;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НоваяОчередь(ЕстьПриоритет, ЕстьУникальность, ФункцияСравнения = Неопределено, Ключ = Неопределено)
	Результат = Новый Структура("Элементы, ЕстьПриоритет, ЕстьУникальность", Новый Массив, ЕстьПриоритет, ЕстьУникальность);
	Если ЕстьПриоритет Тогда
		Результат.Вставить("ФункцияСравнения", ФункцияСравнения);
	КонецЕсли;
	Если ЕстьУникальность Тогда
		Результат.Вставить("Словарь", РаботаСМножеством.Множество(Ключ));
		Результат.Вставить("Ключ", Ключ);
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти
