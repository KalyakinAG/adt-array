Перем Элементы Экспорт;

// Преобразует переданные элементы в массив 
// 
// Параметры:
//  НовыеЭлементы - массив - Коллекция элементов, для которой доступен обход ДляКаждого. 
//  	Если параметр не задан, то преобразуется текущая коллекция в массив элементов.
// 
// Возвращаемое значение:
//  ОбработкаОбъект.АТДМассив - Массив
Функция Массив(НовыеЭлементы = Неопределено) Экспорт
	Если НовыеЭлементы = Неопределено Тогда
		Если ТипЗнч(Элементы) = Тип("Массив") Тогда
			Возврат ЭтотОбъект;
		КонецЕсли;		
		Элементы = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Элементы);
		Возврат ЭтотОбъект;
	КонецЕсли;
	Элементы = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(НовыеЭлементы);
	Возврат ЭтотОбъект;
КонецФункции

//  filter
Функция Отобрать(ВыражениеПредиката, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	Элементы = РаботаСМассивом.Отобрать(Элементы, ВыражениеПредиката, Контекст, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

//  find
Функция НайтиЭлемент(ВыражениеПредиката, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	Возврат РаботаСМассивом.НайтиЭлемент(Элементы, ВыражениеПредиката, Контекст, Параметры);
КонецФункции

// sort
// Пример:
//Фрукты = Общий.АТДМассив(СтрРазделить("вишня, арбузы, бананы", ", ", Ложь));
//Фрукты.Сортировать();
//Фрукты.ДляКаждого("Сообщить(Элемент)");// [арбузы, бананы, вишня]
// 
// Параметры:
//  ВыражениеПредиката - Строка
//  Контекст - Неопределено - Контекст
// 
// Возвращаемое значение:
//  ОбработкаОбъект.АТДМассив - Сортировать
Функция Сортировать(ВыражениеПредиката = Неопределено, Контекст = Неопределено) Экспорт
	РаботаСМассивом.Сортировать(Элементы, ВыражениеПредиката, Контекст);
	Возврат ЭтотОбъект;
КонецФункции

// map
// 
// Параметры:
//  Выражение - Строка - Выражение функции
//  Контекст - Неопределено - Контекст
//  Параметры - Неопределено - Параметры
// 
// Возвращаемое значение:
//  ОбработкаОбъект.АТДМассив - Отобразить
Функция Отобразить(Выражение, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	Элементы = РаботаСМассивом.Отобразить(Элементы, Выражение, Контекст, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

// reduce
// 
// Параметры:
//  Выражение - Строка - Выражение функции
//  НачальноеЗначение - Неопределено - Начальное значение
//  Контекст - Неопределено - Контекст
//  Параметры - Неопределено - Параметры
// 
// Возвращаемое значение:
//  Произвольный - Преобразовать
Функция Преобразовать(Выражение, НачальноеЗначение = Неопределено, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	Возврат РаботаСМассивом.Преобразовать(Элементы, Выражение, НачальноеЗначение, Контекст, Параметры);
КонецФункции

//  pop
Функция Взять() Экспорт
	Возврат РаботаСМассивом.Взять(Элементы);
КонецФункции

//  push
Функция Положить(Элемент) Экспорт
	РаботаСМассивом.Положить(Элементы, Элемент);
	Возврат ЭтотОбъект;
КонецФункции

//  forEach
Функция ДляКаждого(Алгоритм, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	РаботаСМассивом.ДляКаждого(Элементы, Алгоритм, Контекст, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

Элементы = Новый Массив;
