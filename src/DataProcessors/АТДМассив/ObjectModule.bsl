//  Подсистема "Абстрактный тип данных массив"
//	Автор: Калякин Андрей Г.
//  https://github.com/KalyakinAG/adt-array
//  https://infostart.ru/1c/articles/1473034/

Перем ЭлементыМассива;

// Преобразует переданные элементы в массив 
// 
// Параметры:
//  НовыеЭлементы - массив - Коллекция элементов, для которой доступен обход ДляКаждого. 
//  	Если параметр не задан, то преобразуется текущая коллекция в массив элементов.
// 
// Возвращаемое значение:
//  ОбработкаОбъект.АТДМассив - Массив
Функция Массив(НовыеЭлементы = Неопределено) Экспорт
	Если НовыеЭлементы = Неопределено Тогда
		Если ТипЗнч(ЭлементыМассива) = Тип("Массив") Тогда
			Возврат ЭтотОбъект;
		КонецЕсли;		
		ЭлементыМассива = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ЭлементыМассива);
		Возврат ЭтотОбъект;
	КонецЕсли;
	ЭлементыМассива = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(НовыеЭлементы);
	Возврат ЭтотОбъект;
КонецФункции

Функция Установить(Элементы) Экспорт
	ЭлементыМассива = Элементы;
	Возврат ЭтотОбъект;
КонецФункции

Функция ВМассив(Свернуть = Ложь) Экспорт
	Если ТипЗнч(ЭлементыМассива) <> Тип("Массив") Тогда
		Массив();
	КонецЕсли;
	Если Свернуть Тогда
		ЭлементыМассива = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ЭлементыМассива);
	КонецЕсли;
	Возврат ЭлементыМассива;
КонецФункции

Функция ВСписокЗначений() Экспорт
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(ВМассив());
	Возврат Список;
КонецФункции

Функция ВФиксированныйМассив() Экспорт
	Возврат Новый ФиксированныйМассив(ВМассив());
КонецФункции

//  flat
Функция Спрямить(Глубина = Неопределено) Экспорт
	ЭлементыМассива = РаботаСМассивом.Спрямить(ЭлементыМассива, Глубина);
	Возврат ЭтотОбъект;
КонецФункции

//  filter
Функция Отобрать(ВыражениеПредиката, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	ЭлементыМассива = РаботаСМассивом.Отобрать(ЭлементыМассива, ВыражениеПредиката, Контекст, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

//  find
Функция НайтиЭлемент(ВыражениеПредиката, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	Возврат РаботаСМассивом.НайтиЭлемент(ЭлементыМассива, ВыражениеПредиката, Контекст, Параметры);
КонецФункции

// sortBy
// Пример:
//Фрукты = Общий.АТДМассив(СтрРазделить("вишня, арбузы, бананы", ", ", Ложь));
//Фрукты.Сортировать();
//Фрукты.ДляКаждого("Сообщить(Элемент)");// [арбузы, бананы, вишня]
// 
// Параметры:
//  ВыражениеПредиката - Строка
//  Контекст - Неопределено - Контекст
// 
// Возвращаемое значение:
//  ОбработкаОбъект.АТДМассив - Сортировать
Функция СортироватьПо(Поля) Экспорт
	РаботаСМассивом.СортироватьПо(ЭлементыМассива, Поля);
	Возврат ЭтотОбъект;
КонецФункции

// sort
// Пример:
//Фрукты = Общий.АТДМассив(СтрРазделить("вишня, арбузы, бананы", ", ", Ложь));
//Фрукты.Сортировать();
//Фрукты.ДляКаждого("Сообщить(Элемент)");// [арбузы, бананы, вишня]
// 
// Параметры:
//  ВыражениеПредиката - Строка
//  Контекст - Неопределено - Контекст
// 
// Возвращаемое значение:
//  ОбработкаОбъект.АТДМассив - Сортировать
Функция Сортировать(ВыражениеПредиката = Неопределено, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	РаботаСМассивом.Сортировать(ЭлементыМассива, ВыражениеПредиката, Контекст, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

Функция ОпределитьТопографическийПорядок(Ключ = "Идентификатор", СвойствоПодчиненныхЭлементов = "ПодчиненныеЭлементы", СвойствоПорядка = "Порядок", Словарь = Неопределено) Экспорт
	РаботаСМассивом.ОпределитьТопографическийПорядок(ЭлементыМассива, Ключ, СвойствоПодчиненныхЭлементов, СвойствоПорядка, Словарь);
	Возврат ЭтотОбъект;
КонецФункции

// map
// 
// Параметры:
//  Выражение - Строка - Выражение функции
//  Контекст - Неопределено - Контекст
//  Параметры - Неопределено - Параметры
// 
// Возвращаемое значение:
//  ОбработкаОбъект.АТДМассив - Отобразить
Функция Отобразить(Выражение, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	ЭлементыМассива = РаботаСМассивом.Отобразить(ЭлементыМассива, Выражение, Контекст, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

// reduce
// 
// Параметры:
//  Выражение - Строка - Выражение функции
//  НачальноеЗначение - Неопределено - Начальное значение
//  Контекст - Неопределено - Контекст
//  Параметры - Неопределено - Параметры
// 
// Возвращаемое значение:
//  Произвольный - Преобразовать
Функция Преобразовать(Выражение, НачальноеЗначение = Неопределено, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	Возврат РаботаСМассивом.Преобразовать(ЭлементыМассива, Выражение, НачальноеЗначение, Контекст, Параметры);
КонецФункции

//  pop
Функция Взять() Экспорт
	Возврат РаботаСМассивом.Взять(ЭлементыМассива);
КонецФункции

//  push
Функция Положить(Элемент) Экспорт
	РаботаСМассивом.Положить(ЭлементыМассива, Элемент);
	Возврат ЭтотОбъект;
КонецФункции

//  insert
Функция Вставить(Индекс, Элемент) Экспорт
	ЭлементыМассива.Вставить(Индекс, Элемент);
	Возврат ЭтотОбъект;
КонецФункции

//  add
Функция Добавить(Элемент) Экспорт
	РаботаСМассивом.Добавить(ЭлементыМассива, Элемент);
	Возврат ЭтотОбъект;
КонецФункции

//  slice
Функция Срез(НижняяГраница = 0, Знач ВерхняяГраница = Неопределено, Шаг = 1) Экспорт
	ЭлементыМассива = РаботаСМассивом.Срез(ЭлементыМассива, НижняяГраница, ВерхняяГраница, Шаг);
	Возврат ЭтотОбъект;
КонецФункции

#Если НЕ ВебКлиент Тогда

//  forEach
Функция ДляКаждого(Алгоритм, Контекст = Неопределено, Параметры = Неопределено) Экспорт
	РаботаСМассивом.ДляКаждого(ЭлементыМассива, Алгоритм, Контекст, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

#КонецЕсли

Функция ДополнитьМассив(МассивИсточник, ТолькоУникальныеЗначения = Ложь) Экспорт
	Дополнить(МассивИсточник, ТолькоУникальныеЗначения);
	Возврат ЭтотОбъект;
КонецФункции

Функция Дополнить(МассивИсточник, ТолькоУникальныеЗначения = Ложь) Экспорт
	ЭлементыМассива = РаботаСМассивом.Дополнить(ЭлементыМассива, МассивИсточник, ТолькоУникальныеЗначения);
	Возврат ЭтотОбъект;
КонецФункции

Функция Разность(МассивВычитания) Экспорт
	ЭлементыМассива = РаботаСМассивом.Разность(ЭлементыМассива, МассивВычитания);
	Возврат ЭтотОбъект;
КонецФункции

Функция Свернуть() Экспорт
	ЭлементыМассива = РаботаСМассивом.Свернуть(ЭлементыМассива);
	Возврат ЭтотОбъект;
КонецФункции

Функция Пустой() Экспорт
	Возврат ЭлементыМассива.Количество() = 0;
КонецФункции

ЭлементыМассива = Новый Массив;
